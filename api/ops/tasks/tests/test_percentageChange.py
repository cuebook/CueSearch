import pandas as pd
from pandas import Timestamp
from ops.tasks.detection.core.detectionTypes.percentageChange import percentChangeDetect

def testPercentChange():
    df = pd.DataFrame([{'ds': Timestamp('2020-07-12 00:00:00+0000', tz='UTC'), 'y': 484},
        {'ds': Timestamp('2020-07-13 00:00:00+0000', tz='UTC'), 'y': 862},
        {'ds': Timestamp('2020-07-14 00:00:00+0000', tz='UTC'), 'y': 682},
        {'ds': Timestamp('2020-07-15 00:00:00+0000', tz='UTC'), 'y': 624},
        {'ds': Timestamp('2020-07-16 00:00:00+0000', tz='UTC'), 'y': 653},
        {'ds': Timestamp('2020-07-17 00:00:00+0000', tz='UTC'), 'y': 794},
        {'ds': Timestamp('2020-07-18 00:00:00+0000', tz='UTC'), 'y': 665},
        {'ds': Timestamp('2020-07-19 00:00:00+0000', tz='UTC'), 'y': 391},
        {'ds': Timestamp('2020-07-20 00:00:00+0000', tz='UTC'), 'y': 918},
        {'ds': Timestamp('2020-07-21 00:00:00+0000', tz='UTC'), 'y': 864},
        {'ds': Timestamp('2020-07-22 00:00:00+0000', tz='UTC'), 'y': 750},
        {'ds': Timestamp('2020-07-23 00:00:00+0000', tz='UTC'), 'y': 774},
        {'ds': Timestamp('2020-07-24 00:00:00+0000', tz='UTC'), 'y': 568},
        {'ds': Timestamp('2020-07-25 00:00:00+0000', tz='UTC'), 'y': 423},
        {'ds': Timestamp('2020-07-26 00:00:00+0000', tz='UTC'), 'y': 340},
        {'ds': Timestamp('2020-07-27 00:00:00+0000', tz='UTC'), 'y': 573},
        {'ds': Timestamp('2020-07-28 00:00:00+0000', tz='UTC'), 'y': 922},
        {'ds': Timestamp('2020-07-29 00:00:00+0000', tz='UTC'), 'y': 756},
        {'ds': Timestamp('2020-07-30 00:00:00+0000', tz='UTC'), 'y': 1324},
        {'ds': Timestamp('2020-07-31 00:00:00+0000', tz='UTC'), 'y': 885},
        {'ds': Timestamp('2020-08-01 00:00:00+0000', tz='UTC'), 'y': 988},
        {'ds': Timestamp('2020-08-02 00:00:00+0000', tz='UTC'), 'y': 405},
        {'ds': Timestamp('2020-08-03 00:00:00+0000', tz='UTC'), 'y': 405},
        {'ds': Timestamp('2020-08-04 00:00:00+0000', tz='UTC'), 'y': 582},
        {'ds': Timestamp('2020-08-05 00:00:00+0000', tz='UTC'), 'y': 811},
        {'ds': Timestamp('2020-08-06 00:00:00+0000', tz='UTC'), 'y': 997},
        {'ds': Timestamp('2020-08-07 00:00:00+0000', tz='UTC'), 'y': 981},
        {'ds': Timestamp('2020-08-08 00:00:00+0000', tz='UTC'), 'y': 960},
        {'ds': Timestamp('2020-08-09 00:00:00+0000', tz='UTC'), 'y': 1311},
        {'ds': Timestamp('2020-08-10 00:00:00+0000', tz='UTC'), 'y': 725}])
    output = {'anomalyData': {'actual': [{'ds': '2020-07-12T00:00:00',
            'y': 484,
            'anomaly': 1},
        {'ds': '2020-07-13T00:00:00', 'y': 862, 'anomaly': 15},
        {'ds': '2020-07-14T00:00:00', 'y': 682, 'anomaly': 1},
        {'ds': '2020-07-15T00:00:00', 'y': 624, 'anomaly': 1},
        {'ds': '2020-07-16T00:00:00', 'y': 653, 'anomaly': 1},
        {'ds': '2020-07-17T00:00:00', 'y': 794, 'anomaly': 1},
        {'ds': '2020-07-18T00:00:00', 'y': 665, 'anomaly': 1},
        {'ds': '2020-07-19T00:00:00', 'y': 391, 'anomaly': 1},
        {'ds': '2020-07-20T00:00:00', 'y': 918, 'anomaly': 15},
        {'ds': '2020-07-21T00:00:00', 'y': 864, 'anomaly': 1},
        {'ds': '2020-07-22T00:00:00', 'y': 750, 'anomaly': 1},
        {'ds': '2020-07-23T00:00:00', 'y': 774, 'anomaly': 1},
        {'ds': '2020-07-24T00:00:00', 'y': 568, 'anomaly': 1},
        {'ds': '2020-07-25T00:00:00', 'y': 423, 'anomaly': 1},
        {'ds': '2020-07-26T00:00:00', 'y': 340, 'anomaly': 1},
        {'ds': '2020-07-27T00:00:00', 'y': 573, 'anomaly': 15},
        {'ds': '2020-07-28T00:00:00', 'y': 922, 'anomaly': 15},
        {'ds': '2020-07-29T00:00:00', 'y': 756, 'anomaly': 1},
        {'ds': '2020-07-30T00:00:00', 'y': 1324, 'anomaly': 15},
        {'ds': '2020-07-31T00:00:00', 'y': 885, 'anomaly': 1},
        {'ds': '2020-08-01T00:00:00', 'y': 988, 'anomaly': 1},
        {'ds': '2020-08-02T00:00:00', 'y': 405, 'anomaly': 15},
        {'ds': '2020-08-03T00:00:00', 'y': 405, 'anomaly': 1},
        {'ds': '2020-08-04T00:00:00', 'y': 582, 'anomaly': 1},
        {'ds': '2020-08-05T00:00:00', 'y': 811, 'anomaly': 1},
        {'ds': '2020-08-06T00:00:00', 'y': 997, 'anomaly': 1},
        {'ds': '2020-08-07T00:00:00', 'y': 981, 'anomaly': 1},
        {'ds': '2020-08-08T00:00:00', 'y': 960, 'anomaly': 1},
        {'ds': '2020-08-09T00:00:00', 'y': 1311, 'anomaly': 1},
        {'ds': '2020-08-10T00:00:00', 'y': 725, 'anomaly': 1}]},
        'anomalyLatest': {'highOrLow': 'low',
        'value': 405.0,
        'percent': 59.008097165991906,
        'anomalyTimeISO': '2020-08-02T00:00:00',
        'anomalyTime': 1596326400000.0}}
    
    assert percentChangeDetect(df, "day", 50) == output

    
